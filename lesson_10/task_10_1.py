"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.


Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для  сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно.
Первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и пр.

"""
class Matrix:
    def __init__(self, list_of_lists):
        self.matrix = list_of_lists

    def __iter__(self):
        return iter(self.matrix)

    def __add__(self, other):
        if len(list(self.matrix)) != len(list(other)):
            return 'Эти матрицы нельзя сложить. Введите матрицы одинакового типа!'
        for row1, row2 in zip(self.matrix, other):
            if len(row1) != len(row2):
                return 'Эти матрицы нельзя сложить. Введите матрицы одинакового типа!'
        matrix_sum = [[cell1 + cell2 for cell1, cell2 in zip(row1, row2)]
              for row1, row2, in zip(self.matrix, other)]
        return str(matrix_sum)[1:-1].replace(',', '').replace('] [', '\n').replace('[', '').replace(']', '')

    def __str__(self):
        return str(self.matrix)[1:-1].replace(',', '').replace('] [', '\n').replace('[', '').replace(']', '')

mat_1 = Matrix([
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9]
])
#print(mat_1)

mat_2 = Matrix ([
    [10, 20, 30],
    [40, 50, 60],
    [70, 80, 90]
])
#print(mat_2)
print(mat_1 + mat_2)

